{
    "contents" : "Data Analysis for U07m\n========================================================\n\nThis is an R Markdown document. Markdown is a simple formatting syntax for authoring web pages (click the **Help** toolbar button for more details on using R Markdown).\n\nWhen you click the **Knit HTML** button a web page will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:\n\nLoad data check numbers factors\n```{r load data}\ndf<- read.csv(\"~/Dropbox/R/CompetitionIndexer/data/U07mFixed.csv\")\nView(df)\ndim(df)\nstr(df)\nhead(df)\nmean(df$dbh,na.rm=TRUE)\ndf$dbh<-as.numeric(df$dbh)\nstr(df)\nsummary(df$dbh,na.rm=TRUE)\nmean(df$dbh,na.rm=TRUE)\n#set variables that will be factors or catagories\ndf$site<-as.factor(df$site)\ndf$year<-as.factor(df$year)\ndf$block<-as.factor(df$block)\ndf$name<-as.factor(df$name)\ndf$plot<-as.factor(df$plot)\nstr(df)\n```\nFilter rows (records) and Select columns (variables) \n```{r subset year}\ndff<-df\ndim(dff)\ndff<-dplyr::filter(df,year==2013)\ndim(dff)\ndff<-dplyr::filter(dff,dbh>0,block!=999);#data frame filtered: extra trees are measured but put in \"999\" Block\ndim(dff)\nnames(dff)\n#View(dff)\ndff$block\ndffn<-filter(dff,name==\"83XAA04\"|name==\"80XAA04\"|name==\"NM6\",dbh>0)\ndim(dffn)\nmin(dffn$dbh)\ndffs<-dplyr::select(dff,site,year,block,name,dbh,ibap,iba,ibamai,batot,Area_Index,DBH_Count,cDBH_AVG,DBH_Ratio,Sum_DBH_Ratio1_sD,Sum_DBH_Ratio2_cD,BA_Ratio,Sum_BA_Ratio)\ndffs\ndim(dffs)\ndplyr::select(dff, dbh)\ndfft<-tbl_df(dff)\ndplyr::select(dfft,name,dbh)\ndff83<-dplyr::filter(dffn,name==\"83XAA04\")\ndff83\ny<-dff83$batot\nqqnorm(y, main=\"83XAA04 9-yr Basal Area / stool \\n test against normal distribution\")\nqqline(y)\nshapiro.test(y)\n\n```\n\nMake boxplot\n```{r boxplot}\n\n## bymedian <- with(dff, reorder(df$dbh));bymedian\n# sort by median dbh\nordDbh<- order(as.numeric(by(dff$dbh, dff$name, median,na.rm=TRUE)))\nordDbh\ndff$name <- ordered(dff$name, levels=levels(dff$name)[ordDbh])\n# control the amount of jitter\n# qplot(factor(name),dbh, data = dff,  geom=\"boxplot\")\np<-ggplot(dff, aes(factor(name),dbh))+\n  xlab(\"Full Sib Progeny Name\")+\n  ylab(\"9-yr DBH (inches)\")+\n  ggtitle(\"U07m-2005 alba/aspen Full Sib Progeny Trial (NM6 check clone) \\n smaller area index means more Competition\")\n\n\n##p + geom_boxplot() + geom_jitter(aes(color=name)) + theme(axis.text.x = element_text(angle=-90,vjust=0.5, hjust=1))\n\n####p + geom_point(aes(size = df$Area_Index)\np + geom_boxplot() + \n  theme(axis.text.x = element_text(angle=-90,vjust=0.5, hjust=1)) + \n  geom_point(aes(size = dff$Area_Index,color=name),alpha=I(1/3),position=\"jitter\")\n\n#View(df)\n#### boxplot with total basal area on y axis\n\n\np<-ggplot(dff, aes(factor(name),batot))+\n  xlab(\"Full Sib Progeny Name\")+\n  ylab(\"9-yr Basal Area (sq.ft./stool)\")+\n  ggtitle(\"U07m-2005 alba/aspen Full Sib Progeny Trial (NM6 check clone) \\n smaller area index means more Competition \\n 8 adjacent trees equal to the center subject = 81 \\n on the Competition Index\")\n\n\n##p + geom_boxplot() + geom_jitter(aes(color=name)) + theme(axis.text.x = element_text(angle=-90,vjust=0.5, hjust=1))\n\n####p + geom_point(aes(size = df$Area_Index)\np + geom_boxplot() + \n  theme(axis.text.x = element_text(angle=-90,vjust=0.5, hjust=1)) + \n  geom_point(aes(size = dff$Area_Index,color=name),alpha=I(1/3),position=\"jitter\")\n\n\n#q + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\n\n#p + geom_boxplot(aes(fill = factor(name)))\n#p + geom_boxplot(notch=TRUE)+ geom_jitter(aes(color=name))\n#p + geom_boxplot(notch=FALSE)+ geom_jitter(aes(color=name))\n#p + geom_boxplot(geom='error bar',notch=FALSE)+ geom_jitter(aes(color=name))\n\n```{r PlotData}\n\npdf<-read.csv(\"~/Dropbox/R/CompetitionIndexer/data/U07mFixed.csv\")\nstr(pdf)\ndim(pdf)\npdf$block<-as.factor(pdf$block)\n#u07m.9yr<-subset(u07m.6yrs.indices,u07m.6yrs.indices$setid==1)\n#df<-u07m.9yr\nhead(pdf)\n## bymedian <- with(df, reorder(df$dbh));bymedian\n# sort by median dbh\nordDbh<- order(as.numeric(by(df$dbh, df$name, median,na.rm=TRUE)))\nordDbh\ndf$name <- ordered(df$name, levels=levels(df$name)[ordDbh])\n# control the amount of jitter\nqplot(factor(name),dbh, data = df,  geom=\"boxplot\")\np<-ggplot(df, aes(factor(name),dbh))\np + geom_boxplot() + geom_jitter(aes(color=name)) + theme(axis.text.x = element_text(angle=-90,vjust=0.5, hjust=1))\n```\nDemonstration of plot math for getting mathematical symbols in plot text\n```{r PlotMath}\ndemo(plotmath)\n```{r scatter plot}\ndfs<-subset(df,(name==\"83XAA04\"),select=c(id,dbh,Area_Index))\ndfs\nq<-ggplot(dfs,aes(Area_Index,dbh))\nq+geom_point()+\n  geom_jitter(position = position_jitter(width = 2.5))+\n  #geom_text(aes(label=dfs$id))\n  geom_smooth(method=\"lm\", se= F, size = 1)+\n  \nxlab(\"Area Index using DBH & distance of 8 adjacent trees,9'x9'spacing\")+\n  ylab(\"9-yr DBH in inches equivalent \\n (adding multiple stemmed trees together) \")+\n  ggtitle(\"U07m-2005 alba/aspen Full Sib Progeny Trial (83xAA04) \\n smaller area index means more competition \\n 8 trees twice the size of subject DBH = 36 \\n 8 trees equal the subject = 81 \\n 8 trees half the size of subject = 144 \\n all trees surrounding center subject tree are dead = 324\")\n```\n```{r Normality}\n# read in on MSU windeows computer\nu07m_83_2013 <- read.csv(\"C:/Users/Brad/Dropbox/CompetitionIndexer/data/u07m_83_2013.csv\")\n#read in on laptop\nu07m_83_2013 <- read.csv(\"~/Dropbox/R/CompetitionIndexer/data/u07m_83_2013.csv\")\nz<-u07m_83_2013$dbh;z\nboxplot(z)\nqqnorm(z,main=\"83XAA04 DBH distribution 9-years on y-axis \\n against normal distribution x-axis\",\n       xlab=\"Normal Distribution\",\n       ylab=\"9-yr DBH 83XAA04\");qqline(z)\nshapiro.test(z)\n#The Shapiro-Wilks Test for normality. The null hypothesis is that this distribution is a normal distribution. This p-value tells you what the chances are that the sample comes from a normal distribution. The lower this value, the smaller the chance. Statisticians typically use a value of 0.05 as a cutoff, so when the p-value is lower than 0.05, you can conclude that the sample deviates from normality.\n```\n#graphing clones with dbh ~ Area_Index\n```{r graphing}\n# got the following from this website < http://www.alastairsanderson.com/R/tutorials/linear-regression-with-a-factor/ >\ndffn\ndim(dffn)\nnames(dffn)\ndffn$name\nlength(dffn$name)\n#reduce levels from 11 down to the 3\ndffn$name<-factor(dffn$name)\ndffn$name\nDBH<-dffn$dbh\nAreaIndex<-dffn$Area_Index\nlibrary(lattice)\nxyplot(DBH ~ AreaIndex, data = dffn, group = name,\n       auto.key = list(title = \"Name\", columns = 3)\n       )\n# going to graph different classes\n## create a vector of model formulae:\nforms <- paste(\"DBH ~ \",\n               c(\"AreaIndex\",                   # same intercept & slope\n                 \"AreaIndex + name\",           # different intercept, same slope\n                 \"AreaIndex / name\",           # same intercept, different slope\n                 \"AreaIndex * name\",           # different intercept & slope\n                 \"name / AreaIndex\",           # different intercept & slope\n                 \"name / (1 + AreaIndex) - 1\"  # different intercept & slope\n                 ), sep = \"\"\n               )\n#next section assigns names to the models\nnames(forms) <- paste(\"Model\", LETTERS[1:length(forms)])\nforms   # print out the object\n#next section\n## fit each model to the data:\n##install.packages(\"plyr\")       # if package not already installed\n#library(plyr)\nmodels <- plyr::llply(forms, lm, data = dffn)\nnames(models) <- names(forms)    # assign model name to model object in list\n## Use an anonymous function to add predicted data + AIC fit criterion:\npredData <- ldply(models, function(m) within(m$model,  # combine with fitted AreaIndex & DBH data\n                                             {\n                                               pred <- predict(m)\n                                               AIC <- AIC(m)\n                                             }\n                                             )\n                  )\nhead(predData)   # print out first few rows of data frame\n#Next Secion\n## add formula column to data frame & create custom panel strip title:\npredData <- within(predData,\n                   {\n                     modelName <- .id   # preserve model name\n                     formula <- rep(as.character(forms),\n                                    each = nrow(predData) / length(forms))\n                     strip <- factor(paste(formula, \", AIC =\", round(AIC, 1)))\n                     strip <- reorder(strip, AIC)  # sort by AIC value\n                   }\n                   )\n#next section\n## plot points & predictions for each model:\n##install.packages(\"ggplot2\")   # if package not already installed\n#library(ggplot2)\nlength(AreaIndex)\nlength(DBH)\nlength(dffn$name)\nggplot(data = predData, aes(AreaIndex, DBH, colour = name)) +\n  geom_point(alpha = 0.5) +   # use 50% transparent points, to handle overplotting\n  geom_line(aes(y = pred)) +  # show model prediction as a line\n  facet_wrap( ~ strip)        # use separate panel for each different model\n\n```\n",
    "created" : 1396864490495.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1521532304",
    "id" : "3772D53A",
    "lastKnownWriteTime" : 1397041795,
    "path" : "~/Dropbox/R/CompetitionIndexer/src/U07m-Indices-Analysis.Rmd",
    "project_path" : "src/U07m-Indices-Analysis.Rmd",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}