{
    "contents" : "Sample to diagnose for Boxplots & histogram together\n========================================================\n\nThis is an R Markdown document. Markdown is a simple formatting syntax for authoring web pages (click the **Help** toolbar button for more details on using R Markdown).\n\nWhen you click the **Knit HTML** button a web page will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:\n\n```{r}\n# Boxplot and histogram together\nshb<-function (x,...) {\n    ## Plot both the histogram and the boxplot\n    ## to show relationship easily.\n    op<-par(no.readonly=TRUE)\n    on.exit(par(op))\n    layout(matrix(c(1,2),2,1),heights=c(3,1))\n    par(mai=c(1,1,1,1)/2)\n    hist(x)\n    #hist(x,xlab=FALSE,col=gray(0.95),yaxt='n',...)\n    rug(x)\n    boxplot(x,horizontal=TRUE)\n  }\ny\nshb(y)\n\n\n\n\nQQplot = function(x, y, n = 20,\n  xsf= 4,ysf= 4,\n  main=\"qqplot\",xlab=deparse(substitute(x)), ylab = deparse(substitute(y)),\n  pch =16,pcol = \"black\",                # points\n  shade = \"gray\",\n  ...) {\n  ## n -- number of points\n  ## xsf scale factor for x density\n  ## ysf same for y\n\n  ## scale x and y\n  x.sc = (x-mean(x))/sd(x); y.sc = (y-mean(y))/sd(y)\n  \n  zip = function(x,y,do.na = TRUE) {\n    ## alternate x,y\n    k = length(x)\n    ret = c()\n    m = 2\n    if(do.na == TRUE)\n      m = 3\n    ret[m*(0:(k-1))+1] = x\n    ret[m*(0:(k-1))+2] = y\n    if(m == 3)\n      ret[m*(0:(k-1))+3] = rep(NA,k)             # recycle\n    return(ret)\n  }\n  zip4 = function(x,y,z,w) {\n    ## alternate x,y,z,w\n    k = length(x)\n    ret = c()\n    m = 4\n    ret[m*(0:(k-1))+1] = x\n    ret[m*(0:(k-1))+2] = y\n    ret[m*(0:(k-1))+3] = z\n    ret[m*(1:k)] = w\n#    ret[m*(1:k)] = rep(NA,k)\n    return(ret)\n  }\n\n  ## return y value for given x value\n  findInDensity= function(x,dens) {\n    if(class(dens) == \"density\" & !is.na(x)) {\n      if(any(dens$x < x)) {\n        i = max(which(dens$x < x))\n        dens$y[i]\n      } else {\n        dens$y[length(dens$y)]\n      }\n    } else {\n      return(NA)\n    }\n  }\n  \n  \n  ## n should be even\n  k = n %/% 2                           # half of n\n  n = k * 2 - 1\n  vals = (1:(n-1))/(n)\n  \n  dens = list(\n    x= density(x.sc),\n    y = density(y.sc)\n    )\n  qpts = list(\n    x = quantile(x.sc,vals),\n    y = quantile(y.sc,vals)\n    )\n\n\n  xlim = c(min(dens$x$x) - ysf*max(dens$y$y),max(dens$x$x))\n  ylim = c(min(dens$y$x) - xsf*max(dens$x$y),max(dens$y$x))\n\n  \n  plot.new()\n  plot.window(xlim=xlim,ylim=ylim,...)\n  title(main=main,xlab=xlab,ylab=ylab)\n  \n  lines(xlim,rep(min(dens$y$x),2))\n  lines(rep(min(dens$x$x),2),ylim)\n  \n  ## x first\n  lines(dens$x$x,min(dens$y$x) - xsf*dens$x$y, type=\"l\",xaxt=\"n\",yaxt=\"n\")\n\n  ## shade in.\n  new.x = zip4(qpts$x[2*(1:k)-1],qpts$x[2*(1:k)-1],\n    qpts$x[2*(1:k)],qpts$x[2*(1:k)])\n  new.y = zip4(rep(0,k),\n    -sapply(qpts$x[2*(1:k)-1],function(x) findInDensity(x,dens$x)),\n    -sapply(qpts$x[2*(1:k)],function(x) findInDensity(x,dens$x)),\n    rep(0,k))\n  polygon(c(min(dens$x$x),new.x,max(dens$x$x)),min(dens$y$x)+xsf*c(0,new.y,0), col=shade)\n\n  retval = list(\n    x=new.x,\n    y=new.y)\n\n  \n  ## y now\n  lines(min(dens$x$x)-ysf*dens$y$y,dens$y$x,xaxt=\"n\",yaxt=\"n\")\n\n  ## shade in.\n  new.x = zip4(rep(0,k),\n    -sapply(qpts$y[2*(1:k)-1],function(x) findInDensity(x,dens$y)),\n    -sapply(qpts$y[2*(1:k)],  function(x) findInDensity(x,dens$y)),\n    rep(0,k))\n  new.y = zip4(qpts$y[2*(1:k)-1],qpts$y[2*(1:k)-1],\n    qpts$y[2*(1:k)],qpts$y[2*(1:k)])\n  polygon(min(dens$x$x)+ysf*c(new.x,max(new.x)),c(new.y,0), col=shade)\n\n  ## plot densities\n\n  points(qpts$x,qpts$y, pch=pch, col=pcol)\n\n\n  lty = 2\n  lines(zip(qpts$x,qpts$x),zip(rep(min(dens$y$x),n-1),qpts$y), lty=lty)\n  lines(zip(rep(min(dens$x$x),n-1),qpts$x),zip(qpts$y,qpts$y), lty=lty)\n}\n\n```\n\n",
    "created" : 1396928152675.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1898985442",
    "id" : "438EF396",
    "lastKnownWriteTime" : 1396928310,
    "path" : "~/Dropbox/R/CompetitionIndexer/src/BoxplotHistogramTogether.Rmd",
    "project_path" : "src/BoxplotHistogramTogether.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}